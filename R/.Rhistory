ï¼Ÿlm
?lm()
debug(lm())
lm
#'
#' @description This function passes parameters to the lm function.
#' @param formula a formula
#' @param data a data.frame
#' @return An lm object
#' @importFrom stats lm
#' @examples
#' fit <- linear_model(Sepal.Length ~., iris)
#' summary(fit)
#' @export
data(iris)
#'
#' @description This function passes parameters to the lm function.
#' @param formula a formula
#' @param data a data.frame
#' @return An lm object
#' @importFrom stats lm
#' @examples
#' fit <- linear_model(Sepal.Length ~., iris)
#' summary(fit)
#' @export
data(iris)
linear_model <- function(formula, data) {
#lm(formula, data)
}
#'
#' @description This function passes parameters to the lm function.
#' @param formula a formula
#' @param data a data.frame
#' @return An lm object
#' @importFrom stats lm
#' @examples
#' fit <- linear_model(Sepal.Length ~., iris)
#' summary(fit)
#' @export
View(iris)
data(iris)
View(iris)
a<-data(iris)
View(a)
data(iris)
View(data)
?svd()
svd
linear_model <- function(formula, data) {
browser()
mm<-model.matrix(formula, data)
y<-data$Sepal.Length[as.integer(row.names(mm))]
x<-mm[,c(2,6)]
svd_output <- svd(x)
U <- svd_output[["u"]]
Sinv <- diag(1 / svd_output[["d"]])
V <- svd_output[["v"]]
pseudo_inv <- V %*% Sinv %*% t(U)
betahat <- pseudo_inv %*% y
#lm(formula, data)
}
fit<-linear_model(Sepal.Length ~., iris)
linear_model <- function(formula, data) {
#browser()
mm<-model.matrix(formula, data)
y<-data$Sepal.Length[as.integer(row.names(mm))]
x<-mm[,c(2,6)]
svd_output <- svd(x)
U <- svd_output[["u"]]
Sinv <- diag(1 / svd_output[["d"]])
V <- svd_output[["v"]]
pseudo_inv <- V %*% Sinv %*% t(U)
betahat <- pseudo_inv %*% y
#lm(formula, data)
}
linear_model(Sepal.Length ~., iris)
View(linear_model)
View(linear_model)
fit<-linear_model(Sepal.Length ~., iris)
summary(fit)
linear_model <- function(formula, data) {
#browser()
mm<-model.matrix(formula, data)
y<-data$Sepal.Length[as.integer(row.names(mm))]
x<-mm[,c(2,6)]
svd_output <- svd(x)
U <- svd_output[["u"]]
Sinv <- diag(1 / svd_output[["d"]])
V <- svd_output[["v"]]
pseudo_inv <- V %*% Sinv %*% t(U)
betahat <- pseudo_inv %*% y
colnames(betahat) <- "regression coefficient"
rownames(betahat) <- c("Sepal.Width","Patal.Length","Petal.Width","Species_versicolor","Species_virginica")
print(betahat)
#lm(formula, data)
}
fit<-linear_model(Sepal.Length ~., iris)
linear_model <- function(formula, data) {
#browser()
mm<-model.matrix(formula, data)
y<-data$Sepal.Length[as.integer(row.names(mm))]
x<-mm[,2:6]
svd_output <- svd(x)
U <- svd_output[["u"]]
Sinv <- diag(1 / svd_output[["d"]])
V <- svd_output[["v"]]
pseudo_inv <- V %*% Sinv %*% t(U)
betahat <- pseudo_inv %*% y
colnames(betahat) <- "regression coefficient"
rownames(betahat) <- c("Sepal.Width","Patal.Length","Petal.Width","Species_versicolor","Species_virginica")
print(betahat)
#lm(formula, data)
}
fit<-linear_model(Sepal.Length ~., iris)
#'
#' @description This function passes parameters to the lm function.
#' @param formula a formula
#' @param data a data.frame
#' @return An lm object
#' @importFrom stats lm
#' @examples
#' fit <- linear_model(Sepal.Length ~., iris)
#' summary(fit)
#' @export
load("/Users/shawnieshan/Desktop/BIS557/bis557/data/lm_patho.rda")
View(lm_patho)
lmod<-lm(lm_patho$y~.,data=lm_patho)
summary(lmod)
all.vars()
?all.vars
load("/Users/shawnieshan/Desktop/BIS557/bis557/data/lm_patho.rda")
#lmod<-lm(lm_patho$y~.,data=lm_patho)
#summary(lmod)
linear_model <- function(formula, data) {
#browser()
all<-all.vars(formula)
x<-model.matrix(formula, data=data)
y<-data[,all[1]]
#svd_output <- svd(x)
#U <- svd_output[["u"]]
#Sinv <- diag(1 / svd_output[["d"]])
#V <- svd_output[["v"]]
#pseudo_inv <- V %*% Sinv %*% t(U)
#betahat <- pseudo_inv %*% y
#colnames(betahat) <- "regression coefficient"
#rownames(betahat) <- c("Sepal.Width","Patal.Length","Petal.Width","Species_versicolor","Species_virginica")
#print(betahat)
#lm(formula, data)
beta<-list()
beta$coefficients=qr.coef(qr(x),y)
class(beta)="lm"
return(beta)
}
linear_model(lm_patho$y~.,data=lm_patho)
linear_model(y~.,data=lm_patho)
load("/Users/shawnieshan/Desktop/BIS557/bis557/data/lm_patho.rda")
#lmod<-lm(lm_patho$y~.,data=lm_patho)
#summary(lmod)
linear_model <- function(formula, data) {
#browser()
all<-all.vars(formula)
x<-model.matrix(formula, data)
y<-data[,all[1]]
#svd_output <- svd(x)
#U <- svd_output[["u"]]
#Sinv <- diag(1 / svd_output[["d"]])
#V <- svd_output[["v"]]
#pseudo_inv <- V %*% Sinv %*% t(U)
#betahat <- pseudo_inv %*% y
#colnames(betahat) <- "regression coefficient"
#rownames(betahat) <- c("Sepal.Width","Patal.Length","Petal.Width","Species_versicolor","Species_virginica")
#print(betahat)
#lm(formula, data)
beta<-list()
beta$coefficients=qr.coef(qr(x),y)
class(beta)="lm"
return(beta)
}
linear_model(y~.,data=lm_patho)
load("/Users/shawnieshan/Desktop/BIS557/bis557/data/lm_patho.rda")
#lmod<-lm(lm_patho$y~.,data=lm_patho)
#summary(lmod)
linear_model <- function(formula, data) {
#browser()
all<-all.vars(formula)
x<-model.matrix(formula, data)
y<-data[,all[1]]
#svd_output <- svd(x)
#U <- svd_output[["u"]]
#Sinv <- diag(1 / svd_output[["d"]])
#V <- svd_output[["v"]]
#pseudo_inv <- V %*% Sinv %*% t(U)
#betahat <- pseudo_inv %*% y
#colnames(betahat) <- "regression coefficient"
#rownames(betahat) <- c("Sepal.Width","Patal.Length","Petal.Width","Species_versicolor","Species_virginica")
#print(betahat)
#lm(formula, data)
beta<-list()
beta$coefficients=qr.coef(qr(x),y)
class(beta)="lm"
return(beta)
}
linear_model(y~.,data=lm_patho)
library(testthat)
test()
install.packages(testthat)
install.packages("testthat")
library(test)
test()
install.packages("test")
library(test)
test()
linear_model <- function(formula, data) {
#browser()
all<-all.vars(formula)
x<-model.matrix(formula, data)
y<-data[,all[1]]
#svd_output <- svd(x)
#U <- svd_output[["u"]]
#Sinv <- diag(1 / svd_output[["d"]])
#V <- svd_output[["v"]]
#pseudo_inv <- V %*% Sinv %*% t(U)
#betahat <- pseudo_inv %*% y
#colnames(betahat) <- "regression coefficient"
#rownames(betahat) <- c("Sepal.Width","Patal.Length","Petal.Width","Species_versicolor","Species_virginica")
#print(betahat)
#lm(formula, data)
beta<-list()
beta$call=call("linear_model", formula)
beta$coefficients=qr.coef(qr(x),y)
class(beta)="lm"
return(beta)
}
linear_model(y~.,data=lm_patho)
linear_model <- function(formula, data) {
#browser()
all<-all.vars(formula)
x<-model.matrix(formula, data)
y<-data[,all[1]]
#svd_output <- svd(x)
#U <- svd_output[["u"]]
#Sinv <- diag(1 / svd_output[["d"]])
#V <- svd_output[["v"]]
#pseudo_inv <- V %*% Sinv %*% t(U)
#betahat <- pseudo_inv %*% y
#colnames(betahat) <- "regression coefficient"
#rownames(betahat) <- c("Sepal.Width","Patal.Length","Petal.Width","Species_versicolor","Species_virginica")
#print(betahat)
#lm(formula, data)
beta<-list()
beta$call=call("linear_model", formula,data)
beta$coefficients=qr.coef(qr(x),y)
class(beta)="lm"
return(beta)
}
linear_model(y~.,data=lm_patho)
library(test)
test()
install.packages("devtools")
library(devtools)
test()
library(bis557)
install.packages("bis557")
library(bis557)
library(devtools)
test()
library(devtools)
test()
test()
load("/Users/shawnieshan/Desktop/BIS557/bis557/data/lm_patho.rda")
#lmod<-lm(lm_patho$y~.,data=lm_patho)
#summary(lmod)
linear_model <- function(formula, data) {
#browser()
all<-all.vars(formula)
x<-model.matrix(formula, data)
y<-data[,all[1]]
#svd_output <- svd(x)
#U <- svd_output[["u"]]
#Sinv <- diag(1 / svd_output[["d"]])
#V <- svd_output[["v"]]
#pseudo_inv <- V %*% Sinv %*% t(U)
#betahat <- pseudo_inv %*% y
#colnames(betahat) <- "regression coefficient"
#rownames(betahat) <- c("Sepal.Width","Patal.Length","Petal.Width","Species_versicolor","Species_virginica")
#print(betahat)
#lm(formula, data)
beta<-list()
beta$call=call("linear_model", formula)
beta$coefficients=qr.coef(qr(x),y)
class(beta)="lm"
return(beta)
}
linear_model(y~.,data=lm_patho)
#library(bis557)
library(devtools)
test()
linear_model <- function(formula, data) {
#browser()
all<-all.vars(formula)
x<-model.matrix(formula, data)
y<-data[,all[1]]
#svd_output <- svd(x)
#U <- svd_output[["u"]]
#Sinv <- diag(1 / svd_output[["d"]])
#V <- svd_output[["v"]]
#pseudo_inv <- V %*% Sinv %*% t(U)
#betahat <- pseudo_inv %*% y
#colnames(betahat) <- "regression coefficient"
#rownames(betahat) <- c("Sepal.Width","Patal.Length","Petal.Width","Species_versicolor","Species_virginica")
#print(betahat)
#lm(formula, data)
beta<-list()
beta$call=call("linear_model", formula)
beta$coefficients=qr.coef(qr(x),y)
class(beta)="lm"
return(beta)
}
#linear_model(y~.,data=lm_patho)
#library(bis557)
library(devtools)
test()
install.
install.packages("test")
library(bis557)
sparse.matrix <- function(i, j, x, dims = c(max(i), max(j))){
#if (length(i) != length(j) || length(j) != length(x))
#stop("Incorrect dimensions.")
structure(list(data.frame(i = c(1, 2), j = c(1, 1), x = c(3, 1)), dims), class = "sparse.matrix")
}
sm0 <- sparse.matrix(i = c(1, 2), j = c(1, 1), x = c(1, 1))
sm0
