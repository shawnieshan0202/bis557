set.seed(123)
n <- 1000
x <- runif(n,min=0,max=1)
x.new <- runif(100,0,1)
x.new <- sort(x.new)
# Inputs: x, a numeric vector; h a numeric value
# giving the bandwidth
# Output: value of the Epanechnikov kernel
kernel_epan <- function(x, h = 1) {
x <- x / h
ran <- as.numeric(abs(x) <= 1)
val <- (3/4) * ( 1 - x^2 ) * ran
return(val)
}
##Apply one-dimensional (Epanechnikov) kernel regression.
##Args:
# x: Numeric vector of the original predictor variables.
# x_new: A vector of data values at which to estimate.
# h: A numeric value giving the bandwidth of the kernel.
##Returns:
# A vector of predictions for each value in x_new.
kernel_reg <- function(x, x.new, h) {
sapply(x.new, function(v) {
yhat <- mean(kernel_epan((v-x),h))/h
yhat
})
}
#plot the density function to compare the kernel curve
h = c(0.1, 0.2, 0.3, 0.5,1)
i=1
for (i in h){
plot(x.new, kernel_reg(x,x.new,i), ylab = "Estimation", main = "Kernel density", type = "l")
}
